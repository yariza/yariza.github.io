{"version":3,"sources":["webpack:///./node_modules/simplex-noise/simplex-noise.js","webpack:///./src/flow-field/index.js","webpack:///./src/sketch.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","F2","Math","sqrt","G2","G3","F4","G4","SimplexNoise","randomOrSeed","random","s0","s1","s2","c","mash","n","data","toString","i","length","h","charCodeAt","masher","arguments","t","alea","this","p","buildPermutationTable","perm","Uint8Array","permMod12","r","aux","prototype","grad3","Float32Array","grad4","noise2D","xin","yin","i1","j1","n0","n1","n2","s","floor","j","x0","y0","x1","y1","x2","y2","ii","jj","t0","gi0","t1","gi1","t2","gi2","noise3D","zin","n3","k1","i2","j2","k2","k","z0","z1","z2","x3","y3","z3","kk","t3","gi3","noise4D","x","y","z","w","n4","l1","l2","i3","j3","k3","l3","l","w0","rankx","ranky","rankz","rankw","w1","w2","w3","x4","y4","z4","w4","ll","t4","gi4","_buildPermutationTable","undefined","call","exports","__webpack_require__","module","FlowField","options","_this","_classCallCheck","getName","supportsAudio","bressenhamLine","inx0","iny0","inx1","iny1","callback","dx","dy","steep","abs","tmp","xstep","ystep","twody","twodytwodx","e","xDraw","yDraw","once","clamp","val","mmin","mmax","min","max","smoothstep","edge0","edge1","getValue","arr","gridDim","setValue","getVelocity","velocity_u","velocity_v","setVelocity","vel","swap_u","next_velocity_u","swap_v","next_velocity_v","interpolateD","d","d11","d12","set_boundary_corners","set_boundary_solid","set_boundary_horizontal","set_boundary_vertical","diffuse","diff","dt","a","gridSize","iterations","advect","u","v","bi","bj","project","u0","v0","divergence","pressure","vel_step","visc","computeCurl","simplex","add_velocity","ctx","millis","noiseEvolution","curl","noiseFreq","noiseScale","resize","width","height","numCells","mousemove","mouse","oi","ox","oj","oy","px","py","mouseSpeed","update","swap","next_u","next_v","set","viscosity","timeScale","draw","lineWidth","jNorm","alpha","len","scale","pow","grayscale","lerp","strokeStyle","constrainedLen","beginPath","moveTo","lineTo","stroke","Sketch","create","bind","root","factory","_typeof","document","window","MATH_PROPS","split","M","CANVAS","DOM","doc","win","instances","defaults","fullscreen","autostart","autoclear","autopause","container","body","interval","globals","retina","type","keyMap","8","9","13","16","27","32","37","38","39","40","isFunction","object","isString","extend","target","source","overwrite","key","proxy","method","context","apply","constructor","request","handler","parent","bounds","index","suffix","clock","node","copy","counter","touches","resized","setup","ratio","devicePixelRatio","isDiv","is2D","eventMap","eventTarget","element","pointer","event","keyCode","keys","code","String","fromCharCode","keyName","trigger","stop","start","splice","on","passive","capture","style","canvas","innerHeight","innerWidth","augment","touch","getBoundingClientRect","pageX","left","scrollX","pageXOffset","pageY","top","scrollY","pageYOffset","align","process","currentTarget","preventDefault","clone","originalEvent","indexOf","dragging","test","now","Date","running","NaN","destroy","parentNode","removeChild","toggle","clear","clearRect","push","cAF","rAF","save","restore","WEB_GL","WEBGL","install","TWO_PI","PI","HALF_PI","QUARTER_PI","Object","isArray","isNumber","amount","map","num","minA","maxA","minB","maxB","self","createElement","getContext","appendChild","className","vendors","scope","then","b","id","setTimeout","clearTimeout"],"mappings":"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","file":"flow-field.bundle.js","sourcesContent":["/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n\n Copyright (c) 2018 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\n(function() {\n  'use strict';\n\n  var F2 = 0.5 * (Math.sqrt(3.0) - 1.0);\n  var G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\n  var F3 = 1.0 / 3.0;\n  var G3 = 1.0 / 6.0;\n  var F4 = (Math.sqrt(5.0) - 1.0) / 4.0;\n  var G4 = (5.0 - Math.sqrt(5.0)) / 20.0;\n\n  function SimplexNoise(randomOrSeed) {\n    var random;\n    if (typeof randomOrSeed == 'function') {\n      random = randomOrSeed;\n    }\n    else if (randomOrSeed) {\n      random = alea(randomOrSeed);\n    } else {\n      random = Math.random;\n    }\n    this.p = buildPermutationTable(random);\n    this.perm = new Uint8Array(512);\n    this.permMod12 = new Uint8Array(512);\n    for (var i = 0; i < 512; i++) {\n      this.perm[i] = this.p[i & 255];\n      this.permMod12[i] = this.perm[i] % 12;\n    }\n\n  }\n  SimplexNoise.prototype = {\n    grad3: new Float32Array([1, 1, 0,\n      -1, 1, 0,\n      1, -1, 0,\n\n      -1, -1, 0,\n      1, 0, 1,\n      -1, 0, 1,\n\n      1, 0, -1,\n      -1, 0, -1,\n      0, 1, 1,\n\n      0, -1, 1,\n      0, 1, -1,\n      0, -1, -1]),\n    grad4: new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n      0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n      1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n      -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n      1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n      -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n      1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n      -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]),\n    noise2D: function(xin, yin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0 = 0; // Noise contributions from the three corners\n      var n1 = 0;\n      var n2 = 0;\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin) * F2; // Hairy factor for 2D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var t = (i + j) * G2;\n      var X0 = i - t; // Unskew the cell origin back to (x,y) space\n      var Y0 = j - t;\n      var x0 = xin - X0; // The x,y distances from the cell origin\n      var y0 = yin - Y0;\n      // For the 2D case, the simplex shape is an equilateral triangle.\n      // Determine which simplex we are in.\n      var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n      if (x0 > y0) {\n        i1 = 1;\n        j1 = 0;\n      } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n      else {\n        i1 = 0;\n        j1 = 1;\n      } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n      // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n      // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n      // c = (3-sqrt(3))/6\n      var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n      var y1 = y0 - j1 + G2;\n      var x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n      var y2 = y0 - 1.0 + 2.0 * G2;\n      // Work out the hashed gradient indices of the three simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      // Calculate the contribution from the three corners\n      var t0 = 0.5 - x0 * x0 - y0 * y0;\n      if (t0 >= 0) {\n        var gi0 = permMod12[ii + perm[jj]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n      }\n      var t1 = 0.5 - x1 * x1 - y1 * y1;\n      if (t1 >= 0) {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);\n      }\n      var t2 = 0.5 - x2 * x2 - y2 * y2;\n      if (t2 >= 0) {\n        var gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to return values in the interval [-1,1].\n      return 70.0 * (n0 + n1 + n2);\n    },\n    // 3D simplex noise\n    noise3D: function(xin, yin, zin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0, n1, n2, n3; // Noise contributions from the four corners\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin + zin) * F3; // Very nice and simple skew factor for 3D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var k = Math.floor(zin + s);\n      var t = (i + j + k) * G3;\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var x0 = xin - X0; // The x,y,z distances from the cell origin\n      var y0 = yin - Y0;\n      var z0 = zin - Z0;\n      // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n      // Determine which simplex we are in.\n      var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n      var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n      if (x0 >= y0) {\n        if (y0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // X Y Z order\n        else if (x0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // X Z Y order\n        else {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // Z X Y order\n      }\n      else { // x0<y0\n        if (y0 < z0) {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Z Y X order\n        else if (x0 < z0) {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Y Z X order\n        else {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // Y X Z order\n      }\n      // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n      // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n      // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n      // c = 1/6.\n      var x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n      var y1 = y0 - j1 + G3;\n      var z1 = z0 - k1 + G3;\n      var x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n      var y2 = y0 - j2 + 2.0 * G3;\n      var z2 = z0 - k2 + 2.0 * G3;\n      var x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n      var y3 = y0 - 1.0 + 3.0 * G3;\n      var z3 = z0 - 1.0 + 3.0 * G3;\n      // Work out the hashed gradient indices of the four simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      // Calculate the contribution from the four corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to stay just inside [-1,1]\n      return 32.0 * (n0 + n1 + n2 + n3);\n    },\n    // 4D simplex noise, better simplex rank ordering method 2012-03-09\n    noise4D: function(x, y, z, w) {\n      var perm = this.perm;\n      var grad4 = this.grad4;\n\n      var n0, n1, n2, n3, n4; // Noise contributions from the five corners\n      // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n      var s = (x + y + z + w) * F4; // Factor for 4D skewing\n      var i = Math.floor(x + s);\n      var j = Math.floor(y + s);\n      var k = Math.floor(z + s);\n      var l = Math.floor(w + s);\n      var t = (i + j + k + l) * G4; // Factor for 4D unskewing\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var W0 = l - t;\n      var x0 = x - X0; // The x,y,z,w distances from the cell origin\n      var y0 = y - Y0;\n      var z0 = z - Z0;\n      var w0 = w - W0;\n      // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n      // To find out which of the 24 possible simplices we're in, we need to\n      // determine the magnitude ordering of x0, y0, z0 and w0.\n      // Six pair-wise comparisons are performed between each possible pair\n      // of the four coordinates, and the results are used to rank the numbers.\n      var rankx = 0;\n      var ranky = 0;\n      var rankz = 0;\n      var rankw = 0;\n      if (x0 > y0) rankx++;\n      else ranky++;\n      if (x0 > z0) rankx++;\n      else rankz++;\n      if (x0 > w0) rankx++;\n      else rankw++;\n      if (y0 > z0) ranky++;\n      else rankz++;\n      if (y0 > w0) ranky++;\n      else rankw++;\n      if (z0 > w0) rankz++;\n      else rankw++;\n      var i1, j1, k1, l1; // The integer offsets for the second simplex corner\n      var i2, j2, k2, l2; // The integer offsets for the third simplex corner\n      var i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n      // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n      // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n      // impossible. Only the 24 indices which have non-zero entries make any sense.\n      // We use a thresholding to set the coordinates in turn from the largest magnitude.\n      // Rank 3 denotes the largest coordinate.\n      i1 = rankx >= 3 ? 1 : 0;\n      j1 = ranky >= 3 ? 1 : 0;\n      k1 = rankz >= 3 ? 1 : 0;\n      l1 = rankw >= 3 ? 1 : 0;\n      // Rank 2 denotes the second largest coordinate.\n      i2 = rankx >= 2 ? 1 : 0;\n      j2 = ranky >= 2 ? 1 : 0;\n      k2 = rankz >= 2 ? 1 : 0;\n      l2 = rankw >= 2 ? 1 : 0;\n      // Rank 1 denotes the second smallest coordinate.\n      i3 = rankx >= 1 ? 1 : 0;\n      j3 = ranky >= 1 ? 1 : 0;\n      k3 = rankz >= 1 ? 1 : 0;\n      l3 = rankw >= 1 ? 1 : 0;\n      // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n      var x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n      var y1 = y0 - j1 + G4;\n      var z1 = z0 - k1 + G4;\n      var w1 = w0 - l1 + G4;\n      var x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n      var y2 = y0 - j2 + 2.0 * G4;\n      var z2 = z0 - k2 + 2.0 * G4;\n      var w2 = w0 - l2 + 2.0 * G4;\n      var x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n      var y3 = y0 - j3 + 3.0 * G4;\n      var z3 = z0 - k3 + 3.0 * G4;\n      var w3 = w0 - l3 + 3.0 * G4;\n      var x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n      var y4 = y0 - 1.0 + 4.0 * G4;\n      var z4 = z0 - 1.0 + 4.0 * G4;\n      var w4 = w0 - 1.0 + 4.0 * G4;\n      // Work out the hashed gradient indices of the five simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      var ll = l & 255;\n      // Calculate the contribution from the five corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = (perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32) * 4;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad4[gi0] * x0 + grad4[gi0 + 1] * y0 + grad4[gi0 + 2] * z0 + grad4[gi0 + 3] * w0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = (perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32) * 4;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad4[gi1] * x1 + grad4[gi1 + 1] * y1 + grad4[gi1 + 2] * z1 + grad4[gi1 + 3] * w1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = (perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32) * 4;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad4[gi2] * x2 + grad4[gi2 + 1] * y2 + grad4[gi2 + 2] * z2 + grad4[gi2 + 3] * w2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = (perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32) * 4;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad4[gi3] * x3 + grad4[gi3 + 1] * y3 + grad4[gi3 + 2] * z3 + grad4[gi3 + 3] * w3);\n      }\n      var t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n      if (t4 < 0) n4 = 0.0;\n      else {\n        var gi4 = (perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32) * 4;\n        t4 *= t4;\n        n4 = t4 * t4 * (grad4[gi4] * x4 + grad4[gi4 + 1] * y4 + grad4[gi4 + 2] * z4 + grad4[gi4 + 3] * w4);\n      }\n      // Sum up and scale the result to cover the range [-1,1]\n      return 27.0 * (n0 + n1 + n2 + n3 + n4);\n    }\n  };\n\n  function buildPermutationTable(random) {\n    var i;\n    var p = new Uint8Array(256);\n    for (i = 0; i < 256; i++) {\n      p[i] = i;\n    }\n    for (i = 0; i < 255; i++) {\n      var r = i + ~~(random() * (256 - i));\n      var aux = p[i];\n      p[i] = p[r];\n      p[r] = aux;\n    }\n    return p;\n  }\n  SimplexNoise._buildPermutationTable = buildPermutationTable;\n\n  function alea() {\n    // Johannes Baagøe <baagoe@baagoe.com>, 2010\n    var s0 = 0;\n    var s1 = 0;\n    var s2 = 0;\n    var c = 1;\n\n    var mash = masher();\n    s0 = mash(' ');\n    s1 = mash(' ');\n    s2 = mash(' ');\n\n    for (var i = 0; i < arguments.length; i++) {\n      s0 -= mash(arguments[i]);\n      if (s0 < 0) {\n        s0 += 1;\n      }\n      s1 -= mash(arguments[i]);\n      if (s1 < 0) {\n        s1 += 1;\n      }\n      s2 -= mash(arguments[i]);\n      if (s2 < 0) {\n        s2 += 1;\n      }\n    }\n    mash = null;\n    return function() {\n      var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n      s0 = s1;\n      s1 = s2;\n      return s2 = t - (c = t | 0);\n    };\n  }\n  function masher() {\n    var n = 0xefc8249d;\n    return function(data) {\n      data = data.toString();\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n  }\n\n  // amd\n  if (typeof define !== 'undefined' && define.amd) define(function() {return SimplexNoise;});\n  // common js\n  if (typeof exports !== 'undefined') exports.SimplexNoise = SimplexNoise;\n  // browser\n  else if (typeof window !== 'undefined') window.SimplexNoise = SimplexNoise;\n  // nodejs\n  if (typeof module !== 'undefined') {\n    module.exports = SimplexNoise;\n  }\n\n})();\n","import SimplexNoise from 'simplex-noise';\nimport Sketch from '../sketch';\n\nexport default class FlowField {\n\n    constructor(options) {\n        this.viscosity = 0.3;\n\n        this.gridSize = 20;\n        this.mouseSpeed = 5;\n        this.timeScale = 5;\n        this.iterations = 20;\n        this.noiseScale = 0.02;\n        this.noiseFreq = 0.05;\n        this.noiseEvolution = 0.2;\n    \n        this.gridDim = {\n            x: 0,\n            y: 0,\n        };\n    \n        this.simplex = new SimplexNoise();\n\n        this.ctx = Sketch.create(options);\n\n        this.ctx.resize = this.resize.bind(this);\n        this.ctx.mousemove = this.mousemove.bind(this);\n        this.ctx.update = this.update.bind(this);\n        this.ctx.draw = this.draw.bind(this);\n    }\n\n    getName = () => {\n        return 'flow-field';\n    }\n\n    supportsAudio = () => {\n        return false;\n    }\n\n    bressenhamLine = (inx0, iny0, inx1, iny1, callback) => {\n        let x0 = floor(inx0);\n        let y0 = floor(iny0);\n        let x1 = floor(inx1);\n        let y1 = floor(iny1);\n\n        let dx = x1 - x0;\n        let dy = y1 - y0;\n        let steep = (abs(dy) >= abs(dx));\n\n        if (steep) {\n            let tmp = x0;\n            x0 = y0;\n            y0 = tmp;\n\n            tmp = x1;\n            x1 = y1;\n            y1 = tmp;\n\n            // recompute Dx, Dy after swap\n            dx = x1 - x0;\n            dy = y1 - y0;\n        }\n\n        let xstep = 1;\n        if (dx < 0) {\n            xstep = -1;\n            dx = -dx;\n        }\n\n        let ystep = 1;\n        if (dy < 0) {\n            ystep = -1;\n            dy = -dy;\n        }\n\n        let twody = 2 * dy;\n        let twodytwodx = twody - 2 * dx; // 2*Dy - 2*Dx\n        let e = twody - dx; //2*Dy - Dx\n        let y = y0;\n        let xDraw, yDraw;\n\n        let once = false;\n\n        for (let x = x0; x != x1; x += xstep) {\n            if (steep) {\n                xDraw = y;\n                yDraw = x;\n            }\n            else {\n                xDraw = x;\n                yDraw = y;\n            }\n\n            callback(xDraw, yDraw);\n\n            if (e > 0) {\n                e += twodytwodx; //E += 2*Dy - 2*Dx;\n                y = y + ystep;\n            }\n            else {\n                e += twody; //E += 2*Dy;\n            }\n\n            once = true;\n        }\n\n        if (!once) {\n            callback(inx0, iny0);\n        }\n    }\n\n    clamp = (val, mmin, mmax) => {\n        return min(mmax, max(mmin, val));\n    }\n\n    smoothstep = (edge0, edge1, x) => {\n        x = this.clamp((x - edge0) / (edge1 - edge0), 0, 1);\n        return x * x * (3 - 2 * x);\n    }\n\n    getValue = (arr, i, j) => {\n        let index = (j * (this.gridDim.x + 2)) + i;\n        return arr[index];\n    }\n\n    setValue = (arr, i, j, val) => {\n        let index = (j * (this.gridDim.x + 2)) + i;\n        arr[index] = val;\n    }\n\n    getVelocity = (i, j) => {\n        return {\n            x: this.getValue(this.velocity_u, i + 1, j + 1),\n            y: this.getValue(this.velocity_v, i + 1, j + 1),\n        };\n    }\n\n    setVelocity = (i, j, vel) => {\n        this.setValue(this.velocity_u, i + 1, j + 1, vel.x);\n        this.setValue(this.velocity_v, i + 1, j + 1, vel.y);\n    }\n\n    swap_u = () => {\n        let tmp = this.velocity_u;\n        this.next_velocity_u = this.velocity_u;\n        this.velocity_u = tmp;\n    }\n\n    swap_v = () => {\n        let tmp = this.velocity_v;\n        this.next_velocity_v = this.velocity_v;\n        this.velocity_v = tmp;\n    }\n\n    interpolateD = (d, i, j) => {\n        let i1 = this.clamp(floor(i), 0, this.gridDim.x);\n        let i2 = i1 + 1;\n\n        let j1 = this.clamp(floor(j), 0, this.gridDim.y);\n        let j2 = j1 + 1;\n\n        let s = this.clamp(i - i1, 0, 1);\n        let t = this.clamp(j - j1, 0, 1);\n\n        let d11 = this.getValue(d, i1, j1);\n        let d12 = this.getValue(d, i1, j2);\n        let d21 = this.getValue(d, i2, j1);\n        let d22 = this.getValue(d, i2, j2);\n\n        return (d11 * (1 - s) + d21 * s) * (1 - t) +\n               (d12 * (1 - s) + d22 * s) * t;\n    }\n\n    set_boundary_corners = (x) => {\n        this.setValue(x, 0                 , 0                 , 0.5 * (this.getValue(x, 1, 0) + this.getValue(x, 0, 1)));\n        this.setValue(x, 0                 , this.gridDim.y + 1, 0.5 * (this.getValue(x, 1, this.gridDim.y + 1) + this.getValue(x, 0, this.gridDim.y)));\n        this.setValue(x, this.gridDim.x + 1, 0                 , 0.5 * (this.getValue(x, this.gridDim.x, 0) + this.getValue(x, this.gridDim.x + 1, 1)));\n        this.setValue(x, this.gridDim.x + 1, this.gridDim.y + 1, 0.5 * (this.getValue(x, this.gridDim.x, this.gridDim.y + 1) + this.getValue(x, this.gridDim.x + 1, this.gridDim.y)));\n    }\n\n    set_boundary_solid = (x) => {\n        for (let i = 0; i <= this.gridDim.x + 1; i++) {\n            this.setValue(x, i, 0            , this.getValue(x, i, 1));\n            this.setValue(x, i, this.gridDim.y + 1, this.getValue(x, i, this.gridDim.y));\n        }\n        for (let j = 0; j <= this.gridDim.y + 1; j++) {\n            this.setValue(x, 0            , j, this.getValue(x, 1, j));\n            this.setValue(x, this.gridDim.x + 1, j, this.getValue(x, this.gridDim.x, j));\n        }\n        this.set_boundary_corners(x);\n    }\n\n    set_boundary_horizontal = (x) => {\n        for (let i = 0; i <= this.gridDim.x + 1; i++) {\n            this.setValue(x, i, 0            , -this.getValue(x, i, 1));\n            this.setValue(x, i, this.gridDim.y + 1, -this.getValue(x, i, this.gridDim.y));\n        }\n        for (let j = 0; j <= this.gridDim.y + 1; j++) {\n            this.setValue(x, 0            , j, this.getValue(x, 1, j));\n            this.setValue(x, this.gridDim.x + 1, j, this.getValue(x, this.gridDim.x, j));\n        }\n        this.set_boundary_corners(x);\n    }\n\n    set_boundary_vertical = (x) => {\n        for (let i = 0; i <= this.gridDim.x + 1; i++) {\n            this.setValue(x, i, 0            , this.getValue(x, i, 1));\n            this.setValue(x, i, this.gridDim.y + 1, this.getValue(x, i, this.gridDim.y));\n        }\n        for (let j = 0; j <= this.gridDim.y + 1; j++) {\n            this.setValue(x, 0            , j, -this.getValue(x, 1, j));\n            this.setValue(x, this.gridDim.x + 1, j, -this.getValue(x, this.gridDim.x, j));\n        }\n        this.set_boundary_corners(x);\n    }\n\n    diffuse = (x, x0, diff, dt) => {\n        let a = dt * diff / this.gridSize / this.gridSize;\n        \n        for (let k = 0; k < this.iterations; k++) {\n            for (let i = 1; i <= this.gridDim.x; i++) {\n                for (let j = 1; j <= this.gridDim.y; j++) {\n                    this.setValue(x, i, j,\n                        (this.getValue(x0, i, j) + a * (this.getValue(x, i - 1, j) + this.getValue(x, i + 1, j) +\n                                                        this.getValue(x, i, j - 1) + this.getValue(x, i, j + 1))\n                        ) / (1 + 4 * a)\n                    );\n                }\n            }\n        }\n    }\n\n    advect = (x, x0, u, v, dt) => {\n        for (let i = 1; i <= this.gridDim.x; i++) {\n            for (let j = 1; j <= this.gridDim.y; j++) {\n                let bi = i - this.getValue(u, i, j) * dt / this.gridSize;\n                let bj = j - this.getValue(v, i, j) * dt / this.gridSize;\n\n                this.setValue(x, i, j, this.interpolateD(x0, bi, bj));\n            }\n        }\n    }\n\n    project = (u, v, u0, v0) => {\n\n        let h = this.gridSize;\n\n        for (let i = 1; i <= this.gridDim.x; i++) {\n            for (let j = 1; j <= this.gridDim.y; j++) {\n                this.setValue(this.divergence, i, j,\n                    -0.5 * h * (this.getValue(u0, i + 1, j) - this.getValue(u0, i - 1, j) +\n                                this.getValue(v0, i, j + 1) - this.getValue(v0, i, j - 1))\n                );\n                this.setValue(this.pressure, i, j, 0);\n            }\n        }\n\n        this.set_boundary_solid(this.divergence);\n        this.set_boundary_solid(this.pressure);\n\n        for (let k = 0; k < this.iterations; k++) {\n            for (let i = 1; i <= this.gridDim.x; i++) {\n                for (let j = 1; j <= this.gridDim.y; j++) {\n                    this.setValue(this.pressure, i, j, \n                        (this.getValue(this.divergence, i, j) + this.getValue(this.pressure, i - 1, j) +\n                                                                this.getValue(this.pressure, i + 1, j) +\n                                                                this.getValue(this.pressure, i, j - 1) +\n                                                                this.getValue(this.pressure, i, j + 1)\n                        ) / 4\n                    );\n                }\n            }\n            this.set_boundary_solid(this.pressure);\n        }\n\n        for (let i = 1; i <= this.gridDim.x; i++) {\n            for (let j = 1; j <= this.gridDim.y; j++) {\n                this.setValue(u, i, j,\n                    this.getValue(u0, i, j) -\n                    0.5 * (this.getValue(this.pressure, i + 1, j) - this.getValue(this.pressure, i - 1, j)) / h\n                );\n                this.setValue(v, i, j,\n                    this.getValue(v0, i, j) -\n                    0.5 * (this.getValue(this.pressure, i, j + 1) - this.getValue(this.pressure, i, j - 1)) / h\n                );\n            }\n        }\n        this.set_boundary_vertical(u);\n        this.set_boundary_horizontal(v);\n    }\n\n    vel_step = (u, v, u0, v0, visc, dt) => {\n\n        this.diffuse(u0, u, visc, dt);\n        this.set_boundary_vertical(u0);\n        this.diffuse(v0, v, visc, dt);\n        this.set_boundary_horizontal(v0);\n\n        this.project(u, v, u0, v0);\n\n        // advect u/v -> u0/v0\n        this.advect(u0, u, u, v, dt);\n        this.set_boundary_vertical(u0);\n        this.advect(v0, v, u, v, dt);\n        this.set_boundary_horizontal(v0);\n\n        this.project(u, v, u0, v0);\n    }\n\n    computeCurl = (x, y, t) => {\n        let eps = 0.0001;\n      \n        //Find rate of change in X direction\n        let n1 = this.simplex.noise3D(x + eps, y, t);\n        let n2 = this.simplex.noise3D(x - eps, y, t);\n      \n        //Average to find approximate derivative\n        let a = (n1 - n2)/(2 * eps);\n      \n        //Find rate of change in Y direction\n        n1 = this.simplex.noise3D(x, y + eps, t);\n        n2 = this.simplex.noise3D(x, y - eps, t);\n      \n        //Average to find approximate derivative\n        let b = (n1 - n2)/(2 * eps);\n      \n        //Curl\n        return [b, -a];\n    }\n            \n    add_velocity = (u, v) => {\n        let t = this.ctx.millis * this.noiseEvolution / 1000;\n        for (let i = 1; i <= this.gridDim.x; i++) {\n            for (let j = 1; j <= this.gridDim.y; j++) {\n                let curl = this.computeCurl(i * this.noiseFreq, j * this.noiseFreq, t);\n                this.setValue(u, i, j, this.getValue(u, i, j) + curl[0] * this.noiseScale);\n                this.setValue(v, i, j, this.getValue(v, i, j) + curl[1] * this.noiseScale);\n            }\n        }\n    }\n\n    resize = () => {\n        if (!this.ctx) return;\n\n        this.gridDim.x = floor(this.ctx.width / this.gridSize);\n        this.gridDim.y = floor(this.ctx.height / this.gridSize);\n\n        let numCells = (this.gridDim.x + 2) * (this.gridDim.y + 2);\n        this.velocity_u = new Float32Array(numCells);\n        this.velocity_v = new Float32Array(numCells);\n        this.next_velocity_u = new Float32Array(numCells);\n        this.next_velocity_v = new Float32Array(numCells);\n        this.divergence = new Float32Array(numCells);\n        this.pressure = new Float32Array(numCells);\n    };\n\n    mousemove = () => {\n        let mouse = this.ctx.mouse;\n        if (mouse.dx === 0 && mouse.dy === 0) return;\n\n        let i = this.clamp(floor(mouse.x / this.gridSize), 0, this.gridDim.x - 1);\n        let j = this.clamp(floor(mouse.y / this.gridSize), 0, this.gridDim.y - 1);\n        let oi = this.clamp(floor(mouse.ox / this.gridSize), 0, this.gridDim.x - 1);\n        let oj = this.clamp(floor(mouse.oy / this.gridSize), 0, this.gridDim.y - 1);\n\n        this.bressenhamLine(i, j, oi, oj, (px, py) => {\n            let v = this.getVelocity(px, py);\n\n            v.x += mouse.dx * this.mouseSpeed;\n            v.y += mouse.dy * this.mouseSpeed;\n\n            this.setVelocity(px, py, v);\n        });\n    }\n\n    update = () => {\n\n        if (this.swap === undefined) this.swap = false;\n\n        let u = this.swap ? this.next_velocity_u : this.velocity_u;\n        let v = this.swap ? this.next_velocity_v : this.velocity_v;\n        let next_u = this.swap ? this.velocity_u : this.next_velocity_u;\n        let next_v = this.swap ? this.velocity_v : this.next_velocity_v;\n\n        this.add_velocity(u, v);\n\n        next_u.set(u);\n        next_v.set(v);\n\n        this.vel_step(next_u, next_v, u, v, this.viscosity, this.ctx.dt * this.timeScale / 1000);\n\n        // swap velocity buffers;\n        this.swap = !this.swap;\n    }\n\n    draw = () => {\n        this.ctx.lineWidth = 2.0;\n        let baseColor = 0.6;\n        for (let j = 0; j < this.gridDim.y; j++)\n        {\n            let jNorm = j / (this.gridDim.y - 1);\n            let alpha = this.smoothstep(0.5, 0, abs(jNorm - 0.5));\n\n            for (let i = 0; i < this.gridDim.x; i++)\n            {\n                let p = {\n                    x: (i + 0.5) * this.gridSize,\n                    y: (j + 0.5) * this.gridSize,\n                };\n\n                let v = this.getVelocity(i, j);\n\n                v.x = v.x;\n                v.y = v.y;\n\n                let len = sqrt(v.x * v.x + v.y * v.y);\n                if (len === 0) continue;\n\n                let scale = 1 - pow(1.5, -len / this.gridSize);\n\n                let color = alpha * scale;\n                let grayscale = floor(lerp(1.0, 0.4, color) * 255);\n                this.ctx.strokeStyle = 'rgb(' + grayscale + ', ' + grayscale + ', ' + grayscale + ')';\n    \n                let constrainedLen = min(this.gridSize * 0.7, len / 2);\n                v.x = v.x * constrainedLen / len;\n                v.y = v.y * constrainedLen / len;\n\n                this.ctx.beginPath();\n                this.ctx.moveTo(p.x, p.y);\n                this.ctx.lineTo(p.x + v.x, p.y + v.y);\n                this.ctx.stroke();\n            }\n        }\n    }\n    \n}\n","\n/* Copyright (C) 2013 Justin Windle, http://soulwire.co.uk */\n\n(function ( root, factory ) {\n\n  if ( typeof exports === 'object' ) {\n\n    // CommonJS like\n    module.exports = factory(root, root.document);\n\n  } else if ( typeof define === 'function' && define.amd ) {\n\n    // AMD\n    define( function() { return factory( root, root.document ); });\n\n  } else {\n\n    // Browser global\n    root.Sketch = factory( root, root.document );\n  }\n\n}( typeof window !== \"undefined\" ? window : this, function ( window, document ) {\n\n\n  \"use strict\";\n\n  /*\n  ----------------------------------------------------------------------\n\n    Config\n\n  ----------------------------------------------------------------------\n  */\n\n  var MATH_PROPS = 'E LN10 LN2 LOG2E LOG10E PI SQRT1_2 SQRT2 abs acos asin atan ceil cos exp floor log round sin sqrt tan atan2 pow max min'.split( ' ' );\n  var HAS_SKETCH = '__hasSketch';\n  var M = Math;\n\n  var CANVAS = 'canvas';\n  var WEBGL = 'webgl';\n  var DOM = 'dom';\n\n  var doc = document;\n  var win = window;\n\n  var instances = [];\n\n  var defaults = {\n\n    fullscreen: true,\n    autostart: true,\n    autoclear: true,\n    autopause: true,\n    container: doc.body,\n    interval: 1,\n    globals: true,\n    retina: false,\n    type: CANVAS\n  };\n\n  var keyMap = {\n\n     8: 'BACKSPACE',\n     9: 'TAB',\n    13: 'ENTER',\n    16: 'SHIFT',\n    27: 'ESCAPE',\n    32: 'SPACE',\n    37: 'LEFT',\n    38: 'UP',\n    39: 'RIGHT',\n    40: 'DOWN'\n  };\n\n  /*\n  ----------------------------------------------------------------------\n\n    Utilities\n\n  ----------------------------------------------------------------------\n  */\n\n  function isArray( object ) {\n\n    return Object.prototype.toString.call( object ) == '[object Array]';\n  }\n\n  function isFunction( object ) {\n\n    return typeof object == 'function';\n  }\n\n  function isNumber( object ) {\n\n    return typeof object == 'number';\n  }\n\n  function isString( object ) {\n\n    return typeof object == 'string';\n  }\n\n  function keyName( code ) {\n\n    return keyMap[ code ] || String.fromCharCode( code );\n  }\n\n  function extend( target, source, overwrite ) {\n\n    for ( var key in source )\n\n      if ( overwrite || !( key in target ) )\n\n        target[ key ] = source[ key ];\n\n    return target;\n  }\n\n  function proxy( method, context ) {\n\n    return function() {\n\n      method.apply( context, arguments );\n    };\n  }\n\n  function clone( target ) {\n\n    var object = {};\n\n    for ( var key in target ) {\n      \n      if ( key === 'webkitMovementX' || key === 'webkitMovementY' )\n        continue;\n\n      if ( isFunction( target[ key ] ) )\n\n        object[ key ] = proxy( target[ key ], target );\n\n      else\n\n        object[ key ] = target[ key ];\n    }\n\n    return object;\n  }\n\n  /*\n  ----------------------------------------------------------------------\n\n    Constructor\n\n  ----------------------------------------------------------------------\n  */\n\n  function constructor( context ) {\n\n    var request, handler, target, parent, bounds, index, suffix, clock, node, copy, type, key, val, min, max, w, h;\n\n    var counter = 0;\n    var touches = [];\n    var resized = false;\n    var setup = false;\n    var ratio = win.devicePixelRatio || 1;\n    var isDiv = context.type == DOM;\n    var is2D = context.type == CANVAS;\n\n    var mouse = {\n      x:  0.0, y:  0.0,\n      ox: 0.0, oy: 0.0,\n      dx: 0.0, dy: 0.0\n    };\n\n    var eventMap = [\n\n      context.eventTarget || context.element,\n\n        pointer, 'mousedown', 'touchstart',\n        pointer, 'mousemove', 'touchmove',\n        pointer, 'mouseup', 'touchend',\n        pointer, 'click',\n        pointer, 'mouseout',\n        pointer, 'mouseover',\n\n      doc,\n\n        keypress, 'keydown', 'keyup',\n\n      win,\n\n        active, 'focus', 'blur',\n        resize, 'resize'\n    ];\n\n    var keys = {}; for ( key in keyMap ) keys[ keyMap[ key ] ] = false;\n\n    function trigger( method ) {\n\n      if ( isFunction( method ) )\n\n        method.apply( context, [].splice.call( arguments, 1 ) );\n    }\n\n    function bind( on ) {\n\n      for ( index = 0; index < eventMap.length; index++ ) {\n\n        node = eventMap[ index ];\n\n        if ( isString( node ) )\n\n        target[ ( on ? 'add' : 'remove' ) + 'EventListener' ].call( target, node, handler, {\n          passive: false,\n          capture: false,\n        });\n\n        else if ( isFunction( node ) )\n\n          handler = node;\n\n        else target = node;\n      }\n    }\n\n    function update() {\n\n      cAF( request );\n      request = rAF( update );\n\n      if ( !setup ) {\n\n        trigger( context.setup );\n        setup = isFunction( context.setup );\n      }\n\n      if ( !resized ) {\n        trigger( context.resize );\n        resized = isFunction( context.resize );\n      }\n\n      if ( context.running && !counter ) {\n\n        context.dt = ( clock = +new Date() ) - context.now;\n        context.millis += context.dt;\n        context.now = clock;\n\n        trigger( context.update );\n\n        // Pre draw\n\n        if ( is2D ) {\n\n          if ( context.retina ) {\n\n            context.save();\n            \n            if (context.autoclear) {\n              context.scale( ratio, ratio );\n            }\n          }\n\n          if ( context.autoclear )\n\n            context.clear();\n        }\n\n        // Draw\n\n        trigger( context.draw );\n\n        // Post draw\n\n        if ( is2D && context.retina )\n\n          context.restore();\n      }\n\n      counter = ++counter % context.interval;\n    }\n\n    function resize() {\n\n      target = isDiv ? context.style : context.canvas;\n      suffix = isDiv ? 'px' : '';\n\n      w = context.width;\n      h = context.height;\n\n      if ( context.fullscreen ) {\n\n        h = context.height = win.innerHeight;\n        w = context.width = win.innerWidth;\n      }\n\n      if ( context.retina && is2D && ratio ) {\n\n        target.style.height = h + 'px';\n        target.style.width = w + 'px';\n\n        w *= ratio;\n        h *= ratio;\n      }\n\n      if ( target.height !== h )\n\n        target.height = h + suffix;\n\n      if ( target.width !== w )\n\n        target.width = w + suffix;\n\n      if ( is2D && !context.autoclear && context.retina )\n\n        context.scale( ratio, ratio );\n\n      if ( setup ) trigger( context.resize );\n    }\n\n    function align( touch, target ) {\n\n      bounds = target.getBoundingClientRect();\n\n      touch.x = touch.pageX - bounds.left - (win.scrollX || win.pageXOffset);\n      touch.y = touch.pageY - bounds.top - (win.scrollY || win.pageYOffset);\n\n      return touch;\n    }\n\n    function augment( touch, target ) {\n\n      align( touch, context.element );\n\n      target = target || {};\n\n      target.ox = target.x || touch.x;\n      target.oy = target.y || touch.y;\n\n      target.x = touch.x;\n      target.y = touch.y;\n\n      target.dx = target.x - target.ox;\n      target.dy = target.y - target.oy;\n\n      return target;\n    }\n\n    function process( event ) {\n\n      if ( event.currentTarget === context.element )\n\n        event.preventDefault();\n\n      copy = clone( event );\n      copy.originalEvent = event;\n\n      if ( copy.touches ) {\n\n        touches.length = copy.touches.length;\n\n        for ( index = 0; index < copy.touches.length; index++ )\n\n          touches[ index ] = augment( copy.touches[ index ], touches[ index ] );\n\n      } else {\n\n        touches.length = 0;\n        touches[0] = augment( copy, mouse );\n      }\n\n      extend( mouse, touches[0], true );\n\n      return copy;\n    }\n\n    function pointer( event ) {\n\n      event = process( event );\n\n      min = ( max = eventMap.indexOf( type = event.type ) ) - 1;\n\n      context.dragging =\n\n        /down|start/.test( type ) ? true :\n\n        /up|end/.test( type ) ? false :\n\n        context.dragging;\n\n      while( min )\n\n        isString( eventMap[ min ] ) ?\n\n          trigger( context[ eventMap[ min-- ] ], event ) :\n\n        isString( eventMap[ max ] ) ?\n\n          trigger( context[ eventMap[ max++ ] ], event ) :\n\n        min = 0;\n    }\n\n    function keypress( event ) {\n\n      key = event.keyCode;\n      val = event.type == 'keyup';\n      keys[ key ] = keys[ keyName( key ) ] = !val;\n\n      trigger( context[ event.type ], event );\n    }\n\n    function active( event ) {\n\n      if ( context.autopause )\n\n        ( event.type == 'blur' ? stop : start )();\n\n      trigger( context[ event.type ], event );\n    }\n\n    // Public API\n\n    function start() {\n\n      context.now = +new Date();\n      context.running = true;\n    }\n\n    function stop() {\n\n      context.running = false;\n    }\n\n    function toggle() {\n\n      ( context.running ? stop : start )();\n    }\n\n    function clear() {\n\n      if ( is2D )\n\n        context.clearRect( 0, 0, context.width * ratio, context.height * ratio );\n    }\n\n    function destroy() {\n\n      parent = context.element.parentNode;\n      index = instances.indexOf( context );\n\n      if ( parent ) parent.removeChild( context.element );\n      if ( ~index ) instances.splice( index, 1 );\n\n      bind( false );\n      stop();\n    }\n\n    extend( context, {\n\n      touches: touches,\n      mouse: mouse,\n      keys: keys,\n\n      dragging: false,\n      running: false,\n      millis: 0,\n      now: NaN,\n      dt: NaN,\n\n      destroy: destroy,\n      toggle: toggle,\n      clear: clear,\n      start: start,\n      stop: stop\n    });\n\n    instances.push( context );\n\n    return ( context.autostart && start(), bind( true ), resize(), update(), context );\n  }\n\n  /*\n  ----------------------------------------------------------------------\n\n    Global API\n\n  ----------------------------------------------------------------------\n  */\n\n  var element, context, Sketch = {\n\n    CANVAS: CANVAS,\n    WEB_GL: WEBGL,\n    WEBGL: WEBGL,\n    DOM: DOM,\n\n    instances: instances,\n\n    install: function( context ) {\n\n      if ( !context[ HAS_SKETCH ] ) {\n\n        for ( var i = 0; i < MATH_PROPS.length; i++ )\n\n          context[ MATH_PROPS[i] ] = M[ MATH_PROPS[i] ];\n\n        extend( context, {\n\n          TWO_PI: M.PI * 2,\n          HALF_PI: M.PI / 2,\n          QUARTER_PI: M.PI / 4,\n\n          random: function( min, max ) {\n\n            if ( isArray( min ) )\n\n              return min[ ~~( M.random() * min.length ) ];\n\n            if ( !isNumber( max ) )\n\n              max = min || 1, min = 0;\n\n            return min + M.random() * ( max - min );\n          },\n\n          lerp: function( min, max, amount ) {\n\n            return min + amount * ( max - min );\n          },\n\n          map: function( num, minA, maxA, minB, maxB ) {\n\n            return ( num - minA ) / ( maxA - minA ) * ( maxB - minB ) + minB;\n          }\n        });\n\n        context[ HAS_SKETCH ] = true;\n      }\n    },\n\n    create: function( options ) {\n\n      options = extend( options || {}, defaults );\n\n      if ( options.globals ) Sketch.install( self );\n\n      element = options.element = options.element || doc.createElement( options.type === DOM ? 'div' : 'canvas' );\n\n      context = options.context = options.context || (function() {\n\n        switch( options.type ) {\n\n          case CANVAS:\n\n            return element.getContext( '2d', options );\n\n          case WEBGL:\n\n            return element.getContext( 'webgl', options ) || element.getContext( 'experimental-webgl', options );\n\n          case DOM:\n\n            return element.canvas = element;\n        }\n\n      })();\n\n      ( options.container || doc.body ).appendChild( element );\n\n      return Sketch.augment( context, options );\n    },\n\n    augment: function( context, options ) {\n\n      options = extend( options || {}, defaults );\n\n      options.element = context.canvas || context;\n      options.element.className += ' sketch';\n\n      extend( context, options, true );\n\n      return constructor( context );\n    }\n  };\n\n  /*\n  ----------------------------------------------------------------------\n\n    Shims\n\n  ----------------------------------------------------------------------\n  */\n\n  var vendors = [ 'ms', 'moz', 'webkit', 'o' ];\n  var scope = self;\n  var then = 0;\n\n  var a = 'AnimationFrame';\n  var b = 'request' + a;\n  var c = 'cancel' + a;\n\n  var rAF = scope[ b ];\n  var cAF = scope[ c ];\n\n  for ( var i = 0; i < vendors.length && !rAF; i++ ) {\n\n    rAF = scope[ vendors[ i ] + 'Request' + a ];\n    cAF = scope[ vendors[ i ] + 'Cancel' + a ];\n  }\n\n  scope[ b ] = rAF = rAF || function( callback ) {\n\n    var now = +new Date();\n    var dt = M.max( 0, 16 - ( now - then ) );\n    var id = setTimeout( function() {\n      callback( now + dt );\n    }, dt );\n\n    then = now + dt;\n    return id;\n  };\n\n  scope[ c ] = cAF = cAF || function( id ) {\n    clearTimeout( id );\n  };\n\n  /*\n  ----------------------------------------------------------------------\n\n    Output\n\n  ----------------------------------------------------------------------\n  */\n\n  return Sketch;\n\n}));\n"],"sourceRoot":""}